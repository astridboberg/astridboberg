import Link from "next/link";
import { siteTitle } from "../../layout";
import { projects } from "../../../data/projects";
import style from "../../../assets/scss/project.module.scss";
import projectNav from "../../../assets/scss/components/project-navigation.module.scss";
import BlockImage from "../../../components/image";
import BlockProjects from "../../../components/projects";

const projectID = projects[2];
const pageTitle = projectID.short_title;


export const metadata = {
  title: pageTitle + ' ‚Äì ' + siteTitle
}


export default function fremtind() {
  return (
    <>
    <article className={style.project}>
    <header className={style.header}>
    <h2>{projectID.title}</h2>
    </header>
    
    <BlockImage class={style.thumbnail} url={projectID.thumbnail} alt={projectID.title} width="1378" height="1008" priority />
    
    <div className={style.container}>
    
    <div className={style.meta}>
    <ul>
    <li key="project_type"><span className={style.label}>Type of project:</span> {projectID.type}</li>
    <li key="project_location"><span className={style.label}>Location:</span> <a href={projectID.location.url}>{projectID.location.name}</a></li>
    <li key="project_time_frame"><span className={style.label}>Time frame:</span> {projectID.time}</li>
    <li key="project_contributors"><span className={style.label}>Contributors:</span>
    <ul className={style.contributors}>
    {projectID.team.map((team) => (
      <li key={team} className={style.contributor}>{team}</li>
    ))}
    </ul>
    </li>
    </ul>
    </div>
    
    <div className={style.content}>
    <p>Product Config Manager er en ny, intern applikasjon for √• se, forst√• og endre oppsettet til et produkt. Applikasjonen skal gj√∏re det smidigere og tryggere √• vedlikeholde dataen, og samtidig gi produkteier et tettere forhold til oppsettet. Det var forventet at applikasjonen skulle vise produktegenskaper, st√∏tte endringer, st√∏tte visning av produkter p√• tvers av testmilj√∏oer, og bruke designsystemet <a href="https://jokul.fremtind.no/" target="_blank" rel="external">J√∏kul</a></p>
    
    <p>Applikasjonen automatiserer prosessen med √• hente og oppdatere produktinnstillinger fra fagsystemet, noe som tidligere ble gjort manuelt med store regneark og h√∏y feilrisiko.</p>
    
    <h3>Prosess</h3>
    <p>Vi har hatt en designprosess som i stor grad har involvert hele teamet, for √• sikre felles forst√•else og eierskap til prosjektet. Det at utviklerne var med p√• arbeidet med struktur og flyt, gjorde at de kunne starte koding tidlig. I sluttfasen hadde vi flere iterasjoner med testing og endringer i design, struktur og flyt.</p>
    
    <h4>1. Forst√• oppgaven</h4>
    <p>I starten brukte vi mye tid p√• √• forst√• oppgaven. Vi leste gjennom kravspesifikasjonen og fikk oversikt over alle begrepene.</p>
    
    <h4>2. Analyse av kravspesifikasjon</h4>
    <p>Da alle hadde lest kravspesifikasjonen, fasiliterte designerne en workshop der m√•let var √• f√• en felles forst√•else for hva som er de viktigste funksjonene i applikasjonen. Vi sorterte funksjonene etter (h√∏y prioritet), ‚Äúb√∏r‚Äù (middels prioritet) og ‚Äúkan‚Äù (lav prioritet).</p>
    
    <h4>3. Struktur og flyt</h4>
    <h5>Flytdiagrammer</h5>
    <p>Designerne fasiliterte en intern workshop der vi skulle lage flytdiagrammer basert p√• eksempler i kravspesifikasjonen med fire oppgaver totalt. Vi arbeidet individuelt med oppgaven i fem minutter, deretter hadde vi en kort presentasjon og diskusjon, f√∏r vi laget et felles flytdiagram for oppgaven.</p>
    
    <p>Resultatet etter workshop var en oversikt over flyten p√• de viktigste funksjonene, som utviklerne brukte som utgangspunkt n√•r de satte i gang med utviklingen.</p>
    
    <h5>Wireframes</h5>
    <p>Designerne fasiliterte en intern workshop der vi skulle tegnet skisser basert p√• flytdiagrammene i forrige workshop. Det var seks ulike oppgaver, der vi tegnet individuelt i fem minutter, f√∏r vi presenterte for hverandre og hadde en runde med ‚Äúdot voting‚Äù p√• de elementene vi likte best.</p>
    
    <p>Basert p√• skissene vi tegnet under workshop, fikk utviklerne satt opp sidene som viser produkter og egenskaper.</p>
    
    <h4>4. Prototyping og testing</h4>
    <h5>Papirprototyping med post-its</h5>
    <p>Neste steg for designerne var √• bruke skissene fra forrige workshop til √• tegne ut ferdige wireframes og teste disse p√• produkteier.Vi oppdaget raskt at det var smartere √• lage wireframes med post-its, for da kunne komponentene flyttes p√• og gjenbrukes.Resultatet var en papirprototype som var enkel √• teste p√• produkteier og presentere for menorene v√•re og resten av temaet.</p>
    
    <h5>Oppsett i Figma</h5>
    <p>Papirprototypen kombinert med at vi brukte designsystemet J√∏kul, gjorde at vi raskt fikk satt opp hovedsidene og de viktigste funksjonene i Figma. Parallelt kunne utviklerne starte med √• implementere designet i applikasjonen.</p>
    
    <h5>Brukertesting</h5>
    <p>I denne prosjektfasen var det dessverre lite folk p√• kontoret, men designerne fikk mulighet til √• teste prototypen i Figma med en av utvikler-mentorene v√•re. Under testing fokuserte vi p√• redigering av enkeltprodukt og redigering av markerte produkter. P√• forh√•nd hadde vi laget fire oppgaver.</p>
    
    <h4>5. Utvikling</h4>
    <p>Parallelt med at designere gjorde iterasjoner med prototyping og testing, hadde utviklerne jobbet med √• implementere designet i applikasjonen. Etter hvert var det en del som var ulikt i applikasjonen og prototypen. Det l√∏ste vi med en felles ‚Äúprogge session‚Äù der designere kom med endringer, og hvis det var noe som var lett √• fikse, fikset utviklerne det der og da. Denne metoden gjentok vi to ganger i sluttfasen av prosjektet.</p>
    
    <h3>L√∏sningsforslag</h3>
    <p>Applikasjonen er laget i designsystemet <a href="https://jokul.fremtind.no/" target="_blank" rel="external">J√∏kul</a> og er tilgjengelig i lys og m√∏rk fargepalett.</p>
    
    <h5>Oversikt over produkter</h5>
    <p>Hovedsiden i applikasjonen er produktoversikten. Her vises alle produktene til Fremtind, i samme rekkef√∏lge som de er lagt til. Det er mulig √• s√∏ke, filtrere p√• produktkategori eller egenskap, se detaljer om hvert produkt, samt markere flere produkter for √• redigere eller sammenligne.</p>
    
    <h5>Se detaljer for enkeltprodukt</h5>
    <p>Knappen ‚Äúse detaljer‚Äù p√• produktoversikten √•pner en ny side med detaljer om produktet. Det er mulig √• s√∏ke etter egenskaper og filtrere p√• egenskapskategori, og ekspandere hver rad for √• se mer informasjon om hver egenskaper. I tillegg er det mulig √• b√•de redigere egenskapsverdier og sammenligne verdier p√• tvers av milj√∏.</p>
    
    <h5>Redigere egenskaper for enkeltprodukt</h5>
    <p>Trykking p√• knappen ‚Äúrediger‚Äù p√• enkeltprodukt, legger til en ny kolonne for hver rad, med felt for √• fylle inn ny verdi. Ved √• se gammel verdi og ny verdi ved siden av hverandre, er det lett √• holde oversikt. Knappen ‚ÄúGenerer SQL‚Äù √•pner et modalvindu med generert SQL-sp√∏rring basert p√• endringene.</p>
    
    <h5>Sammenligne enkeltprodukt p√• tvers av milj√∏</h5>
    <p>Knappen ‚Äúsammenlign i milj√∏‚Äù p√• enkeltprodukt, √•pner en ny side med oversikt over egenskapsverdier p√• tvers av milj√∏. Ved ulike egenskapsverdier i milj√∏, er det mulig √• generere en SQL-sp√∏rring for synkronisering av verdier p√• tvers av milj√∏. Knappen ‚ÄúSynkroniser verdier‚Äù √•pner et modalvindu for valg av milj√∏ √• synkronisere fra.</p>
    
    <h5>Sammenligne markerte produkter</h5>
    <p>Fra produktoversikten er det mulig √• markere flere produkter og sammenligne egenskapsverdi. Knappen ‚Äúsammenlign markerte‚Äù √•pner en ny side med oversikt over egenskapsverdi for markerte produkter. Det er mulig √• filtrere p√• egenskapskategori, og velge √• vise alle egenskaper eller kun det som er ulikt.</p>
    
    <h5>Redigere markerte produkter</h5>
    <p>Knappen ‚Äúrediger markerte‚Äù fra produktoversikten, √•pner en ny side med mulighet for √• velge egenskaper √• redigere og fylle inn nye egenskapsverdi for hvert produkt. Det er ogs√• mulig √• krysse av ‚Äúendre for alle produkter‚Äù for √• f√• samme egenskapsverdi p√• alle valgte produkter. Knappen ‚ÄúGenerer SQL‚Äù vil √•pne et modalvindu med generert SQL-sp√∏rring basert p√• endringene.</p>
    
    <h5>Oversikt over egenskaper</h5>
    <p>Applikasjonen har et oppslagsverk med oversikt over alle egenskaper, vist i rekkef√∏lgen de er lagt til. Det er mulig √• s√∏ke og filtrere p√• egenskapskategori, endre sortering basert p√• ID, se detaljer om egenskapen, samt redigere felt for visningsnavn, beskrivelse og kategori.</p>
    
    <h5>Redigere egenskaper</h5>
    <p>P√• egenskaper er det mulig √• gj√∏re endringer direkte i tabellen, og endringene blir synlig i applikasjonen med √©n gang. Det er fordi feltene for visningsnavn, kategori og beskrivelse ikke hentes fra Product Config, men blir definert i denne applikasjonen. Funksjonen er nyttig for dynamisk innhenting av nye egenskaper, der feltene for visningsnavn, kategori og beskrivelse vil mangle verdi.</p>
    
    <h3>Resultat</h3>
    <p></p>
    </div>
    </div>
    </article>
    
    <h2>Keep looking üëÄ</h2>
    <div className={projectNav.container}>
    {projects.filter(project => project.id != '2').toReversed().map((project) => (
      <BlockProjects id={project.id} slug={project.slug} title={project.title} category={project.category} location={project.location.name} thumbnail={project.thumbnail} />
    ))}
    </div>
    </>
  )
}